{
	"nodes":[
		{"id":"5d23414ea8ee0842","x":-216,"y":-440,"width":630,"height":260,"color":"4","type":"text","text":"# 软件实现\n\n软件实现是把软件设计翻译为计算机可以“理解”并最终可运行的代码的过程。\n\n该过程主要工作包括：\n\n- 软件配置管理\n- 软件编码\n- 软件测试\n"},
		{"id":"0f032277e7493823","x":-760,"y":-440,"width":450,"height":260,"color":"2","type":"text","text":"# 软件配置管理\n\n软件配置管理通过标识产品的组成元素、管理和控制变更、验证、记录和报告配置信息，来控制产品的演进和完整性。\n\n软件配置管理与软件质量保证活动密切相关，可以帮助达成软件质量保证目标。"},
		{"id":"5b2c075e8d94de7d","x":-1120,"y":-440,"width":301,"height":260,"color":"2","type":"text","text":" # 软件配置管理活动\n\n- 软件配置管理计划制度\n- 软件配置标识\n- 软件配置控制\n- 软件配置状态管理\n- 软件配置审计\n- 软件发布管理和交付\n"},
		{"id":"fd5a28f6b5f226db","x":-172,"y":-71,"width":543,"height":200,"color":"1","type":"text","text":"# 软件编码\n\n编码就是把软件设计的结果翻译成计算机可以“理解和识别”的形式。 \n\n编码的目的是实现人和计算机的通信，指挥计算机按人的意志正确工作。\n"},
		{"id":"101f351d18c97790","x":-720,"y":-71,"width":449,"height":200,"color":"1","type":"text","text":"# 程序设计语言\n\n程序设计语言是人和计算机通信的最基本工具。\n\n程序设计语言的特性和编码会对程序的可靠性、可读性、可测试性和可维护性产生影响。\n"},
		{"id":"3c69edec446c25f4","x":460,"y":-71,"width":580,"height":200,"color":"1","type":"text","text":"# 程序复杂性度量\n\n在评估软件质量时，可以使用程序复杂性度量，把程序的复杂度乘以适当的常数，估算出软件中故障的数量及软件开发时的工作量。\n\n这种度量结构可以用于比较两个不同设计或两种不同算法的优劣，程序的复杂程度可以作为模块规模的精确限度。\n"},
		{"id":"321c7885b96a90d2","x":524,"y":-440,"width":616,"height":260,"color":"3","type":"text","text":"# 软件测试\n\n软件测试是在将软件交付给客户之前所必须完成的重要步骤，是发现软件错误（缺陷）的主要手段。\n\n根据国家标准 GB/T 15532《计算机软件测试规范》，软件测试的目的是验证软件是否满足软件开发合同或项目开发计划、系统 / 子系统设计文档、SRS、软件设计说明和软件产品说明等规定的软件质量要求。通过测试发现软件缺陷，为软件产品的质量测量和评价提供依据。\n"},
		{"id":"5da8c5cfb2dbe012","x":933,"y":240,"width":547,"height":680,"color":"3","type":"text","text":"# 白盒测试\n\n白盒测试也称为结构测试，主要用于软件单元测试中。\n\n白盒测试将程序看作是一个透明的白盒，测试人员完全清楚程序的结构和处理算法，按照程序内部逻辑结构设计测试用例，检测程序中的主要执行通路是否都能按预定要求正确工作。\n\n白盒测试方法主要有：\n\n- 控制流测试\n- 数据流测试\n- 程序变异测试\n- 静态代码检查（静态测试）\n\n在白盒测试方法中，最常用的技术是逻辑覆盖，即使用测试数据运行被测程序，考查对程序逻辑的覆盖程度。\n\n主要的覆盖标准包括：\n\n- 语句覆盖\n- 判定覆盖\n- 条件覆盖\n- 条件判定覆盖\n- 条件组合覆盖\n- 修正的条件判定覆盖\n- 路径覆盖\n"},
		{"id":"955f5ae8d3ffefaa","x":1520,"y":240,"width":577,"height":480,"color":"3","type":"text","text":"# 黑盒测试\n\n黑盒测试也称为功能测试，主要用于集成测试、确认测试和系统测试中。\n\n黑盒测试将程序看作是一个不透明的黑盒，完全不考虑程序的内部结构和处理算法，而只检查程序功能是否能按照 SRS 的要求正常使用，程序是否能适当地接收输入数据并产生正确的输出信息。\n\n黑盒测试根据 SRS 所规定的功能来设计测试用例，一般包括：\n\n- 等价类划分\n- 边界值分析\n- 判定表\n- 因果图\n- 状态图\n- 随机测试\n- 猜错法\n- 正交试验法\n"},
		{"id":"76fc0d722e629ca7","x":1250,"y":-488,"width":626,"height":356,"color":"3","type":"text","text":"# 静态测试\n\n静态测试是指程序不在机器上运行，而采用人工检测和计算机辅助静态分析的手段对程序进行检测。\n\n经验表明，使用这种方法能够有效地发现 30%~ 70% 的逻辑设计和编码错误。\n\n静态测试的内容包括：\n\n- **对文档的静态测试**\n    - 主要以检查单的形式进行。\n- **对代码的静态测试**\n    - 主要以桌前检查、代码走查和代码审查的形式进行。\n"},
		{"id":"2662e03fd5e6ef03","x":1250,"y":-71,"width":460,"height":231,"color":"3","type":"text","text":"# 动态测试\n\n动态测试是指在计算机上实际运行程序进行软件测试。\n\n动态测试一般分为：\n\n- 白盒测试\n- 黑盒测试\n"},
		{"id":"a7ddecc405a55b1b","x":144,"y":240,"width":632,"height":530,"color":"1","type":"text","text":"# 编码效率\n\n- **程序效率**：\n    - 程序的效率是指程序的执行速度及程序所需占用的内存空间。\n    - 一般说来，任何对效率无重要改善，且对程序的简单性、可读性和正确性不利的程序设计方法都是不可取的。\n- **算法效率**：\n    - 源程序的效率与详细设计阶段确定的算法的效率直接相关。\n    - 在详细设计翻译转换成源程序代码后，算法效率反映为程序的执行速度和存储容量的要求。\n- **存储效率**：\n    - 存储容量对软件设计和编码的制约很大，因此要选择可生成较短目标代码且存储压缩性能优良的编译程序，提高软件的时空间效率。\n    - 提高存储效率的关键是程序的简单化。\n- **IO 效率**：\n    - 输入输出是指面向人的输入 / 输出或面向设备的输入 / 输出。\n    - 如果能够十分方便、简单地输入数据，或者能够十分直观地了解输出信息，则可以说输入 / 输出是高效的。"},
		{"id":"6c69df1f13b9ace5","x":-495,"y":240,"width":548,"height":406,"color":"1","type":"text","text":"# 程序设计风格\n\n在软件生存周期中，开发者经常要阅读程序，阅读程序是软件开发和维护过程中的一个重要组成部分，而且读程序的时间比写程序的时间还要多。\n\n因此，在编写程序时，应使程序具有良好的风格，尽量从编码原则的角度提高程序的可读性，改善程序的质量。\n\n良好的程序设计风格应当注意以下 4 个方面：\n\n- 源程序文档化\n- 数据说明\n- 语句结构\n- 输入 / 输出方法"}
	],
	"edges":[
		{"id":"55fa8fa4f4765721","fromNode":"5d23414ea8ee0842","fromSide":"bottom","toNode":"fd5a28f6b5f226db","toSide":"top"},
		{"id":"6f7f0724577f0c0d","fromNode":"5d23414ea8ee0842","fromSide":"left","toNode":"0f032277e7493823","toSide":"right"},
		{"id":"6f136b4281ec699d","fromNode":"0f032277e7493823","fromSide":"left","toNode":"5b2c075e8d94de7d","toSide":"right"},
		{"id":"81429241066715c7","fromNode":"fd5a28f6b5f226db","fromSide":"left","toNode":"101f351d18c97790","toSide":"right"},
		{"id":"6f2db94941b90fb0","fromNode":"fd5a28f6b5f226db","fromSide":"bottom","toNode":"6c69df1f13b9ace5","toSide":"top"},
		{"id":"c2cf81a3d1b47f4f","fromNode":"fd5a28f6b5f226db","fromSide":"right","toNode":"3c69edec446c25f4","toSide":"left"},
		{"id":"556ffb53d610813f","fromNode":"fd5a28f6b5f226db","fromSide":"bottom","toNode":"a7ddecc405a55b1b","toSide":"top"},
		{"id":"730889481563d77c","fromNode":"5d23414ea8ee0842","fromSide":"right","toNode":"321c7885b96a90d2","toSide":"left"},
		{"id":"4776d5c9e24c17c1","fromNode":"321c7885b96a90d2","fromSide":"right","toNode":"76fc0d722e629ca7","toSide":"left"},
		{"id":"63a2d18ae8f07267","fromNode":"321c7885b96a90d2","fromSide":"right","toNode":"2662e03fd5e6ef03","toSide":"left"},
		{"id":"e6f54e063a5ecdd8","fromNode":"2662e03fd5e6ef03","fromSide":"bottom","toNode":"5da8c5cfb2dbe012","toSide":"top"},
		{"id":"9e65e5d0d3df0b54","fromNode":"2662e03fd5e6ef03","fromSide":"bottom","toNode":"955f5ae8d3ffefaa","toSide":"top"}
	]
}